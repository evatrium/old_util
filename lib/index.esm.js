const r=(r,e,t)=>Object.defineProperty(r,e,t),e=Array.isArray,t=r=>"object"==typeof r&&r instanceof Object,n=r=>"function"==typeof r,o=r=>"string"==typeof r,f=r=>"number"==typeof r,u=(r,e,t)=>r.addEventListener(e,t),i=(r,e,t)=>r.removeEventListener(e,t),s=(r,t,n)=>{if(!e(r))return u(r,t,n),()=>i(r,t,n);let o=[];return r.forEach(r=>{u(r[0],r[1],r[2]),o.push(()=>i(r[0],r[1],r[2]))}),()=>o.forEach(r=>r())};function c(r,e){for(let t in e)r[t]=e[t];return r}const a=(r,e)=>{for(var t in e=e||{},r=r||{})if(r[t]!==e[t])return!0;for(var t in e)if(r[t]!==e[t])return!0;return!1},p=()=>{let r=[],e=(e,t)=>{let n=[];for(t=r.length;t--;)r[t]===e?e=null:n.push(r[t]);r=n};return{unsub:e,sub:t=>(r.push(t),()=>e(t)),notify:e=>r.forEach(r=>r&&r(e))}};export{p as Subie,u as addListener,r as def,s as eventListener,c as extend,e as isArray,n as isFunc,f as isNum,t as isObj,o as isString,a as propsChanged,i as removeListener};
